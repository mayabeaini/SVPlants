{"ast":null,"code":"import { createSlice // createAsyncThunk,\n// createEntityAdapter,\n} from \"@reduxjs/toolkit\";\nconst initialState = [{\n  \"id\": 101,\n  \"plantName\": \"Bacopa\",\n  \"plantStatus\": \"Water\",\n  \"timestamp\": 1618427341396\n}, {\n  \"id\": 102,\n  \"plantName\": \"Daylily\",\n  \"plantStatus\": \"Must Water\",\n  \"timestamp\": 1618427341396\n}, {\n  \"id\": 103,\n  \"plantName\": \"Petunia\",\n  \"plantStatus\": \"Water\",\n  \"timestamp\": 1618427341396\n}, {\n  \"id\": 104,\n  \"plantName\": \"Peony\",\n  \"plantStatus\": \"Water\",\n  \"timestamp\": 1618427341396\n}, {\n  \"id\": 105,\n  \"plantName\": \"Sunflower\",\n  \"plantStatus\": \"Must Water\",\n  \"timestamp\": 1618427341396\n}];\nconst plantsSlice = createSlice({\n  name: 'plants',\n  initialState,\n  reducers: {\n    plantUpdated(state, action) {\n      const {\n        id,\n        plantName,\n        plantStatus,\n        timestamp\n      } = action.payload;\n      const existingPlant = state.find(plant => plant.id === id);\n\n      if (existingPlant) {\n        existingPlant.plantName = plantName;\n        existingPlant.plantStatus = plantStatus;\n        existingPlant.timestamp = timestamp;\n      }\n    }\n\n  }\n});\nexport const {\n  plantUpdated\n} = plantsSlice.actions;\nexport default plantsSlice.reducer;","map":{"version":3,"sources":["/Users/mayabeaini/ShipVistaPlants-MayaBeaini/ShipVistaPlants-MayaBeaini/Client/src/features/plants/plantsSlice.js"],"names":["createSlice","initialState","plantsSlice","name","reducers","plantUpdated","state","action","id","plantName","plantStatus","timestamp","payload","existingPlant","find","plant","actions","reducer"],"mappings":"AAAA,SACIA,WADJ,CAEI;AACA;AAHJ,OAIS,kBAJT;AAME,MAAMC,YAAY,GAAG,CACnB;AACA,QAAM,GADN;AAEA,eAAa,QAFb;AAGA,iBAAe,OAHf;AAIA,eAAa;AAJb,CADmB,EAOnB;AACA,QAAM,GADN;AAEA,eAAa,SAFb;AAGA,iBAAe,YAHf;AAIA,eAAa;AAJb,CAPmB,EAanB;AACA,QAAM,GADN;AAEA,eAAa,SAFb;AAGA,iBAAe,OAHf;AAIA,eAAa;AAJb,CAbmB,EAmBnB;AACA,QAAM,GADN;AAEA,eAAa,OAFb;AAGA,iBAAe,OAHf;AAIA,eAAa;AAJb,CAnBmB,EAyBnB;AACA,QAAM,GADN;AAEA,eAAa,WAFb;AAGA,iBAAe,YAHf;AAIA,eAAa;AAJb,CAzBmB,CAArB;AAgCA,MAAMC,WAAW,GAAGF,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,QADwB;AAE9BF,EAAAA,YAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAAEC,KAAF,EAASC,MAAT,EAAgB;AAC1B,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA,SAAL;AAAgBC,QAAAA,WAAhB;AAA6BC,QAAAA;AAA7B,UAA0CJ,MAAM,CAACK,OAAvD;AACA,YAAMC,aAAa,GAAGP,KAAK,CAACQ,IAAN,CAAYC,KAAK,IAAIA,KAAK,CAACP,EAAN,KAAaA,EAAlC,CAAtB;;AACA,UAAGK,aAAH,EAAiB;AACfA,QAAAA,aAAa,CAACJ,SAAd,GAA0BA,SAA1B;AACAI,QAAAA,aAAa,CAACH,WAAd,GAA4BA,WAA5B;AACAG,QAAAA,aAAa,CAACF,SAAd,GAA0BA,SAA1B;AACD;AACF;;AATO;AAHoB,CAAD,CAA/B;AAgBA,OAAO,MAAM;AAACN,EAAAA;AAAD,IAAiBH,WAAW,CAACc,OAAnC;AACP,eAAed,WAAW,CAACe,OAA3B","sourcesContent":["import {\n    createSlice,\n    // createAsyncThunk,\n    // createEntityAdapter,\n  } from \"@reduxjs/toolkit\";\n  \n  const initialState = [\n    {\n    \"id\": 101,\n    \"plantName\": \"Bacopa\",\n    \"plantStatus\": \"Water\",\n    \"timestamp\": 1618427341396\n    },\n    {\n    \"id\": 102,\n    \"plantName\": \"Daylily\",\n    \"plantStatus\": \"Must Water\",\n    \"timestamp\": 1618427341396\n    },\n    {\n    \"id\": 103,\n    \"plantName\": \"Petunia\",\n    \"plantStatus\": \"Water\",\n    \"timestamp\": 1618427341396\n    },\n    {\n    \"id\": 104,\n    \"plantName\": \"Peony\",\n    \"plantStatus\": \"Water\",\n    \"timestamp\": 1618427341396\n    },\n    {\n    \"id\": 105,\n    \"plantName\": \"Sunflower\",\n    \"plantStatus\": \"Must Water\",\n    \"timestamp\": 1618427341396\n    }\n    ]\n  const plantsSlice = createSlice({\n    name: 'plants',\n    initialState,\n    reducers: {\n      plantUpdated (state, action){\n        const {id, plantName, plantStatus, timestamp} = action.payload\n        const existingPlant = state.find (plant => plant.id === id)\n        if(existingPlant){\n          existingPlant.plantName = plantName\n          existingPlant.plantStatus = plantStatus\n          existingPlant.timestamp = timestamp\n        }\n      }\n    }\n  })\n  \n  export const {plantUpdated} = plantsSlice.actions\n  export default plantsSlice.reducer"]},"metadata":{},"sourceType":"module"}