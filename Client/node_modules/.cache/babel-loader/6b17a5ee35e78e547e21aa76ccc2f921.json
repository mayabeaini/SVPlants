{"ast":null,"code":"var _jsxFileName = \"/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/Plants.js\";\nimport React from \"react\";\nimport planty from \"../../media/plant.png\";\nexport default function Plants({\n  plant,\n  buttonClicks\n}) {\n  //   const plant = useSelector(state =>\n  //     state.plants.find(plant => plant.id === plantId)\n  //   )\n  //   const [plantName, setPlantName] = useState(plant.plantName)\n  //   const [plantStatus, setPlantStatus] = useState(plant.plantStatus)\n  //   const [timestamp, setTimestamp] = useState(plant.timestamp)\n  //   const dispatch = useDispatch()\n  //   const history = useHistory()\n  //     const buttonClicks = (time, id, status, name) => {\n  //             // const aPlant = {\n  //     //   plantName: \"Plant 1\",\n  //     //   plantStatus: \"MustWater\",\n  //     //   timestamp: 1234567890,\n  //     // };\n  //     // axios\n  //     //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n  //     //   .then((response) => console.log(response));\n  //     const time_subtraction = Date.now() - time;\n  //     // do an enumerate for the status options\n  //     if (time_subtraction < 30000 && status === \"Just Watered\") {\n  //       return null;\n  //     } else if (status === \"Must Water\" || status === \"Water\") {\n  //         const onPlantNameChanged = setPlantName(name)\n  //         const onPlantStatusChanged = setPlantStatus(\"Watering\")\n  //         const onTimestampChanged = setTimestamp(Date.now())\n  //         dispatch(plantUpdated({ id: plantId, plantName: name, plantStatus: \"Watering\", timestamp: Date.now() }))\n  //         //   this.setState({\n  //     //     plantInfo: this.state.plantInfo.map((el) =>\n  //     //       el.id === id\n  //     //         ? {\n  //     //             id: el.id,\n  //     //             plantName: el.plantName,\n  //     //             timestamp: Date.now(),\n  //     //             plantStatus: \"Watering\",\n  //     //           }\n  //     //         : el\n  //     //     ),\n  //     //   });\n  //       const tenSecondInterval = () => {\n  //         this.setState({\n  //           plantInfo: this.state.plantInfo.map((el) =>\n  //             el.id === id\n  //               ? {\n  //                   id: el.id,\n  //                   plantName: el.plantName,\n  //                   timestamp: Date.now(),\n  //                   plantStatus: \"Just Watered\",\n  //                 }\n  //               : el\n  //           ),\n  //         });\n  //         const toSetState = () => {\n  //           this.setState({\n  //             plantInfo: this.state.plantInfo.map((el) =>\n  //               el.id === id\n  //                 ? {\n  //                     id: el.id,\n  //                     plantName: el.plantName,\n  //                     timestamp: Date.now(),\n  //                     plantStatus: \"Water\",\n  //                   }\n  //                 : el\n  //             ),\n  //           });\n  //         };\n  //         setTimeout(toSetState, 30000);\n  //       };\n  //       clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n  //     } else if (time_subtraction < 10000 && status === \"Watering\") {\n  //       clearTimeout(clearTimeoutVariable);\n  //       this.setState({\n  //         plantInfo: this.state.plantInfo.map((el) =>\n  //           el.id === id\n  //             ? {\n  //                 id: el.id,\n  //                 plantName: el.plantName,\n  //                 timestamp: Date.now(),\n  //                 plantStatus: \"Just Watered\",\n  //               }\n  //             : el\n  //         ),\n  //       });\n  //       const toSetState = () => {\n  //         this.setState({\n  //           plantInfo: this.state.plantInfo.map((el) =>\n  //             el.id === id\n  //               ? {\n  //                   id: el.id,\n  //                   plantName: el.plantName,\n  //                   timestamp: Date.now(),\n  //                   plantStatus: \"Water\",\n  //                 }\n  //               : el\n  //           ),\n  //         });\n  //       };\n  //       setTimeout(toSetState, 30000);\n  //     } else {\n  //       this.setState({\n  //         plantInfo: this.state.plantInfo.map((el) =>\n  //           el.id === id\n  //             ? {\n  //                 id: el.id,\n  //                 plantName: el.plantName,\n  //                 timestamp: Date.now(),\n  //                 plantStatus: \"Watering\",\n  //               }\n  //             : el\n  //         ),\n  //       });\n  //     }\n  //   };\n  const buttonStyle = status => {\n    if (status === \"Water\") {\n      return \"pink\";\n    } else if (status === \"Watering\") {\n      return \"purple\";\n    } else if (status === \"Must Water\") {\n      return \"red\";\n    } else if (status === \"Just Watered\") {\n      return \"green\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: planty,\n    alt: \"a plant\",\n    style: {\n      width: \"100px\",\n      backgroundColor: \"#faf0e6\",\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, plant.plantName), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: buttonStyle(plant.plantStatus),\n      borderRadius: 5,\n      border: \"none\",\n      outline: \"none\",\n      fontWeight: \"bold\",\n      color: \"white\",\n      width: \"100%\",\n      fontSize: \"20px\",\n      height: \"30px\"\n    },\n    onClick: () => buttonClicks(plant.timestamp, plant.id, plant.plantStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, plant.plantStatus));\n}","map":{"version":3,"sources":["/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/Plants.js"],"names":["React","planty","Plants","plant","buttonClicks","buttonStyle","status","display","flexDirection","alignItems","width","backgroundColor","borderRadius","plantName","plantStatus","border","outline","fontWeight","color","fontSize","height","timestamp","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,eAAe,SAASC,MAAT,CAAgB;AAC7BC,EAAAA,KAD6B;AAE7BC,EAAAA;AAF6B,CAAhf,EAAwB;AACtB,aAAO,MAAP;AACD,KAFD,MAEO,IAAIA,MAAM,KAAK,UAAf,EAA2B;AAChC,aAAO,QAAP;AACD,KAFM,MAEA,IAAIA,MAAM,KAAK,YAAf,EAA6B;AAClC,aAAO,KAAP;AACD,KAFM,MAEA,IAAIA,MAAM,KAAK,cAAf,EAA+B;AACpC,aAAO,OAAP;AACD;AACF,GAVD;;AAWA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE;AAAxD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AACE,IAAA,GAAG,EAAER,MADP;AAEE,IAAA,GAAG,EAAC,SAFN;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,eAAe,EAAE,SAFZ;AAGLC,MAAAA,YAAY,EAAE;AAHT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,CAACU,SAAX,CAZF,eAaE;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,eAAe,EAAEN,WAAW,CAACF,KAAK,CAACW,WAAP,CADvB;AAELF,MAAAA,YAAY,EAAE,CAFT;AAGLG,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,UAAU,EAAE,MALP;AAMLC,MAAAA,KAAK,EAAE,OANF;AAOLR,MAAAA,KAAK,EAAE,MAPF;AAQLS,MAAAA,QAAQ,EAAE,MARL;AASLC,MAAAA,MAAM,EAAE;AATH,KADT;AAYE,IAAA,OAAO,EAAE,MACPhB,YAAY,CAACD,KAAK,CAACkB,SAAP,EAAkBlB,KAAK,CAACmB,EAAxB,EAA4BnB,KAAK,CAACW,WAAlC,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGX,KAAK,CAACW,WAhBT,CAbF,CADF;AAkCD","sourcesContent":["import React from \"react\";\nimport planty from \"../../media/plant.png\";\n\nexport default function Plants({\n  plant,\n  buttonClicks,\n}) {\n  //   const plant = useSelector(state =>\n//     state.plants.find(plant => plant.id === plantId)\n//   )\n//   const [plantName, setPlantName] = useState(plant.plantName)\n//   const [plantStatus, setPlantStatus] = useState(plant.plantStatus)\n//   const [timestamp, setTimestamp] = useState(plant.timestamp)\n\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n\n//     const buttonClicks = (time, id, status, name) => {\n//             // const aPlant = {\n//     //   plantName: \"Plant 1\",\n//     //   plantStatus: \"MustWater\",\n//     //   timestamp: 1234567890,\n//     // };\n//     // axios\n//     //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n//     //   .then((response) => console.log(response));\n\n//     const time_subtraction = Date.now() - time;\n//     // do an enumerate for the status options\n//     if (time_subtraction < 30000 && status === \"Just Watered\") {\n//       return null;\n//     } else if (status === \"Must Water\" || status === \"Water\") {\n//         const onPlantNameChanged = setPlantName(name)\n//         const onPlantStatusChanged = setPlantStatus(\"Watering\")\n//         const onTimestampChanged = setTimestamp(Date.now())\n//         dispatch(plantUpdated({ id: plantId, plantName: name, plantStatus: \"Watering\", timestamp: Date.now() }))\n//         //   this.setState({\n//     //     plantInfo: this.state.plantInfo.map((el) =>\n//     //       el.id === id\n//     //         ? {\n//     //             id: el.id,\n//     //             plantName: el.plantName,\n//     //             timestamp: Date.now(),\n//     //             plantStatus: \"Watering\",\n//     //           }\n//     //         : el\n//     //     ),\n//     //   });\n//       const tenSecondInterval = () => {\n//         this.setState({\n//           plantInfo: this.state.plantInfo.map((el) =>\n//             el.id === id\n//               ? {\n//                   id: el.id,\n//                   plantName: el.plantName,\n//                   timestamp: Date.now(),\n//                   plantStatus: \"Just Watered\",\n//                 }\n//               : el\n//           ),\n//         });\n\n//         const toSetState = () => {\n//           this.setState({\n//             plantInfo: this.state.plantInfo.map((el) =>\n//               el.id === id\n//                 ? {\n//                     id: el.id,\n//                     plantName: el.plantName,\n//                     timestamp: Date.now(),\n//                     plantStatus: \"Water\",\n//                   }\n//                 : el\n//             ),\n//           });\n//         };\n\n//         setTimeout(toSetState, 30000);\n//       };\n//       clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n//     } else if (time_subtraction < 10000 && status === \"Watering\") {\n//       clearTimeout(clearTimeoutVariable);\n//       this.setState({\n//         plantInfo: this.state.plantInfo.map((el) =>\n//           el.id === id\n//             ? {\n//                 id: el.id,\n//                 plantName: el.plantName,\n//                 timestamp: Date.now(),\n//                 plantStatus: \"Just Watered\",\n//               }\n//             : el\n//         ),\n//       });\n\n//       const toSetState = () => {\n//         this.setState({\n//           plantInfo: this.state.plantInfo.map((el) =>\n//             el.id === id\n//               ? {\n//                   id: el.id,\n//                   plantName: el.plantName,\n//                   timestamp: Date.now(),\n//                   plantStatus: \"Water\",\n//                 }\n//               : el\n//           ),\n//         });\n//       };\n//       setTimeout(toSetState, 30000);\n//     } else {\n//       this.setState({\n//         plantInfo: this.state.plantInfo.map((el) =>\n//           el.id === id\n//             ? {\n//                 id: el.id,\n//                 plantName: el.plantName,\n//                 timestamp: Date.now(),\n//                 plantStatus: \"Watering\",\n//               }\n//             : el\n//         ),\n//       });\n//     }\n//   };\n\n  const buttonStyle = (status) => {\n    if (status === \"Water\") {\n      return \"pink\";\n    } else if (status === \"Watering\") {\n      return \"purple\";\n    } else if (status === \"Must Water\") {\n      return \"red\";\n    } else if (status === \"Just Watered\") {\n      return \"green\";\n    }\n  };\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <img\n        src={planty}\n        alt=\"a plant\"\n        style={{\n          width: \"100px\",\n          backgroundColor: \"#faf0e6\",\n          borderRadius: 10,\n        }}\n      />\n      <h3>{plant.plantName}</h3>\n      <button\n        style={{\n          backgroundColor: buttonStyle(plant.plantStatus),\n          borderRadius: 5,\n          border: \"none\",\n          outline: \"none\",\n          fontWeight: \"bold\",\n          color: \"white\",\n          width: \"100%\",\n          fontSize: \"20px\",\n          height: \"30px\",\n        }}\n        onClick={() =>\n          buttonClicks(plant.timestamp, plant.id, plant.plantStatus)\n        }\n      >\n        {plant.plantStatus}\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}