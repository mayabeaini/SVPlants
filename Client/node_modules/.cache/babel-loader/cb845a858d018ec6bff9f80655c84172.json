{"ast":null,"code":"var _jsxFileName = \"/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/PlantsList.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport planty from \"../../media/plant.png\";\nimport Plants from './Plants';\nimport { useHistory } from 'react-router-dom';\nimport { plantUpdated } from './plantsSlice';\nlet clearTimeoutVariable;\nexport const PlantsList = () => {\n  //   const plants = useSelector(state => state.plants)\n  //   const plant = useSelector(state =>\n  //     state.plants.find(plant => plant.id === plantId)\n  //   )\n  //   const [plantName, setPlantName] = useState(plant.plantName)\n  //   const [plantStatus, setPlantStatus] = useState(plant.plantStatus)\n  //   const [timestamp, setTimestamp] = useState(plant.timestamp)\n  //   const dispatch = useDispatch()\n  //   const history = useHistory()\n  //     const buttonClicks = (time, id, status, name) => {\n  //             // const aPlant = {\n  //     //   plantName: \"Plant 1\",\n  //     //   plantStatus: \"MustWater\",\n  //     //   timestamp: 1234567890,\n  //     // };\n  //     // axios\n  //     //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n  //     //   .then((response) => console.log(response));\n  //     const time_subtraction = Date.now() - time;\n  //     // do an enumerate for the status options\n  //     if (time_subtraction < 30000 && status === \"Just Watered\") {\n  //       return null;\n  //     } else if (status === \"Must Water\" || status === \"Water\") {\n  //         const onPlantNameChanged = setPlantName(name)\n  //         const onPlantStatusChanged = setPlantStatus(\"Watering\")\n  //         const onTimestampChanged = setTimestamp(Date.now())\n  //         dispatch(plantUpdated({ id: plantId, plantName: name, plantStatus: \"Watering\", timestamp: Date.now() }))\n  //         //   this.setState({\n  //     //     plantInfo: this.state.plantInfo.map((el) =>\n  //     //       el.id === id\n  //     //         ? {\n  //     //             id: el.id,\n  //     //             plantName: el.plantName,\n  //     //             timestamp: Date.now(),\n  //     //             plantStatus: \"Watering\",\n  //     //           }\n  //     //         : el\n  //     //     ),\n  //     //   });\n  //       const tenSecondInterval = () => {\n  //         this.setState({\n  //           plantInfo: this.state.plantInfo.map((el) =>\n  //             el.id === id\n  //               ? {\n  //                   id: el.id,\n  //                   plantName: el.plantName,\n  //                   timestamp: Date.now(),\n  //                   plantStatus: \"Just Watered\",\n  //                 }\n  //               : el\n  //           ),\n  //         });\n  //         const toSetState = () => {\n  //           this.setState({\n  //             plantInfo: this.state.plantInfo.map((el) =>\n  //               el.id === id\n  //                 ? {\n  //                     id: el.id,\n  //                     plantName: el.plantName,\n  //                     timestamp: Date.now(),\n  //                     plantStatus: \"Water\",\n  //                   }\n  //                 : el\n  //             ),\n  //           });\n  //         };\n  //         setTimeout(toSetState, 30000);\n  //       };\n  //       clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n  //     } else if (time_subtraction < 10000 && status === \"Watering\") {\n  //       clearTimeout(clearTimeoutVariable);\n  //       this.setState({\n  //         plantInfo: this.state.plantInfo.map((el) =>\n  //           el.id === id\n  //             ? {\n  //                 id: el.id,\n  //                 plantName: el.plantName,\n  //                 timestamp: Date.now(),\n  //                 plantStatus: \"Just Watered\",\n  //               }\n  //             : el\n  //         ),\n  //       });\n  //       const toSetState = () => {\n  //         this.setState({\n  //           plantInfo: this.state.plantInfo.map((el) =>\n  //             el.id === id\n  //               ? {\n  //                   id: el.id,\n  //                   plantName: el.plantName,\n  //                   timestamp: Date.now(),\n  //                   plantStatus: \"Water\",\n  //                 }\n  //               : el\n  //           ),\n  //         });\n  //       };\n  //       setTimeout(toSetState, 30000);\n  //     } else {\n  //       this.setState({\n  //         plantInfo: this.state.plantInfo.map((el) =>\n  //           el.id === id\n  //             ? {\n  //                 id: el.id,\n  //                 plantName: el.plantName,\n  //                 timestamp: Date.now(),\n  //                 plantStatus: \"Watering\",\n  //               }\n  //             : el\n  //         ),\n  //       });\n  //     }\n  //   };\n  const renderedPlants = plants.map(plant => /*#__PURE__*/React.createElement(Plants, {\n    plant: plant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }) //     <div\n  //     style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n  //   >\n  //     <img\n  //       src={planty}\n  //       alt=\"a plant\"\n  //       style={{\n  //         width: \"100px\",\n  //         backgroundColor: \"#faf0e6\",\n  //         borderRadius: 10,\n  //       }}\n  //     />\n  //     <h3>{plant.plantName}</h3>\n  //     <button\n  //       style={{\n  //         // backgroundColor: buttonStyle(plant.plantStatus),\n  //         borderRadius: 5,\n  //         border: \"none\",\n  //         outline: \"none\",\n  //         fontWeight: \"bold\",\n  //         color: \"white\",\n  //         width: \"100%\",\n  //         fontSize: \"20px\",\n  //         height: \"30px\",\n  //       }}\n  //     //   onClick={() =>\n  //     //     buttonClicks(plant.timestamp, plant.id, plant.plantStatus)\n  //     //   }\n  //     >\n  //       {plant.plantStatus}\n  //     </button>\n  //   </div>\n  );\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, \"Plants\"), renderedPlants);\n};","map":{"version":3,"sources":["/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/PlantsList.js"],"names":["React","useState","useDispatch","useSelector","planty","Plants","useHistory","plantUpdated","clearTimeoutVariable","PlantsList","renderedPlants","plants","map","plant"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,IAAIC,oBAAJ;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAChcAAc,GAAGC,MAAM,CAACC,GAAP,CAAWC,KAAK,iBACnC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAIA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmC,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCyB,GAAvB;AAqCA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,cAFH,CADF;AAMD,CAtKM","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport planty from \"../../media/plant.png\";\nimport Plants from './Plants'\nimport { useHistory } from 'react-router-dom'\n\nimport { plantUpdated } from './plantsSlice'\n\nlet clearTimeoutVariable\nexport const PlantsList = () => {\n//   const plants = useSelector(state => state.plants)\n\n//   const plant = useSelector(state =>\n//     state.plants.find(plant => plant.id === plantId)\n//   )\n//   const [plantName, setPlantName] = useState(plant.plantName)\n//   const [plantStatus, setPlantStatus] = useState(plant.plantStatus)\n//   const [timestamp, setTimestamp] = useState(plant.timestamp)\n\n//   const dispatch = useDispatch()\n//   const history = useHistory()\n\n//     const buttonClicks = (time, id, status, name) => {\n//             // const aPlant = {\n//     //   plantName: \"Plant 1\",\n//     //   plantStatus: \"MustWater\",\n//     //   timestamp: 1234567890,\n//     // };\n//     // axios\n//     //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n//     //   .then((response) => console.log(response));\n\n//     const time_subtraction = Date.now() - time;\n//     // do an enumerate for the status options\n//     if (time_subtraction < 30000 && status === \"Just Watered\") {\n//       return null;\n//     } else if (status === \"Must Water\" || status === \"Water\") {\n//         const onPlantNameChanged = setPlantName(name)\n//         const onPlantStatusChanged = setPlantStatus(\"Watering\")\n//         const onTimestampChanged = setTimestamp(Date.now())\n//         dispatch(plantUpdated({ id: plantId, plantName: name, plantStatus: \"Watering\", timestamp: Date.now() }))\n//         //   this.setState({\n//     //     plantInfo: this.state.plantInfo.map((el) =>\n//     //       el.id === id\n//     //         ? {\n//     //             id: el.id,\n//     //             plantName: el.plantName,\n//     //             timestamp: Date.now(),\n//     //             plantStatus: \"Watering\",\n//     //           }\n//     //         : el\n//     //     ),\n//     //   });\n//       const tenSecondInterval = () => {\n//         this.setState({\n//           plantInfo: this.state.plantInfo.map((el) =>\n//             el.id === id\n//               ? {\n//                   id: el.id,\n//                   plantName: el.plantName,\n//                   timestamp: Date.now(),\n//                   plantStatus: \"Just Watered\",\n//                 }\n//               : el\n//           ),\n//         });\n\n//         const toSetState = () => {\n//           this.setState({\n//             plantInfo: this.state.plantInfo.map((el) =>\n//               el.id === id\n//                 ? {\n//                     id: el.id,\n//                     plantName: el.plantName,\n//                     timestamp: Date.now(),\n//                     plantStatus: \"Water\",\n//                   }\n//                 : el\n//             ),\n//           });\n//         };\n\n//         setTimeout(toSetState, 30000);\n//       };\n//       clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n//     } else if (time_subtraction < 10000 && status === \"Watering\") {\n//       clearTimeout(clearTimeoutVariable);\n//       this.setState({\n//         plantInfo: this.state.plantInfo.map((el) =>\n//           el.id === id\n//             ? {\n//                 id: el.id,\n//                 plantName: el.plantName,\n//                 timestamp: Date.now(),\n//                 plantStatus: \"Just Watered\",\n//               }\n//             : el\n//         ),\n//       });\n\n//       const toSetState = () => {\n//         this.setState({\n//           plantInfo: this.state.plantInfo.map((el) =>\n//             el.id === id\n//               ? {\n//                   id: el.id,\n//                   plantName: el.plantName,\n//                   timestamp: Date.now(),\n//                   plantStatus: \"Water\",\n//                 }\n//               : el\n//           ),\n//         });\n//       };\n//       setTimeout(toSetState, 30000);\n//     } else {\n//       this.setState({\n//         plantInfo: this.state.plantInfo.map((el) =>\n//           el.id === id\n//             ? {\n//                 id: el.id,\n//                 plantName: el.plantName,\n//                 timestamp: Date.now(),\n//                 plantStatus: \"Watering\",\n//               }\n//             : el\n//         ),\n//       });\n//     }\n//   };\n\n\n  const renderedPlants = plants.map(plant => (\n      <Plants plant = {plant} />\n//     <div\n//     style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n//   >\n//     <img\n//       src={planty}\n//       alt=\"a plant\"\n//       style={{\n//         width: \"100px\",\n//         backgroundColor: \"#faf0e6\",\n//         borderRadius: 10,\n//       }}\n//     />\n//     <h3>{plant.plantName}</h3>\n//     <button\n//       style={{\n//         // backgroundColor: buttonStyle(plant.plantStatus),\n//         borderRadius: 5,\n//         border: \"none\",\n//         outline: \"none\",\n//         fontWeight: \"bold\",\n//         color: \"white\",\n//         width: \"100%\",\n//         fontSize: \"20px\",\n//         height: \"30px\",\n//       }}\n//     //   onClick={() =>\n//     //     buttonClicks(plant.timestamp, plant.id, plant.plantStatus)\n//     //   }\n//     >\n//       {plant.plantStatus}\n//     </button>\n//   </div>\n\n  ))\n\n  return (\n    <section>\n      <h2>Plants</h2>\n      {renderedPlants}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}