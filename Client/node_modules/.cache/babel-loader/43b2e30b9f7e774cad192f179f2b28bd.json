{"ast":null,"code":"var _jsxFileName = \"/Users/mayabeaini/ShipVistaPlants-MayaBeaini/ShipVistaPlants-MayaBeaini/Client/src/pages/Home/Home.jsx\";\nimport React, { Component } from \"react\";\nimport ListOfPlants from \"../../components/ListOfPlants/ListOfPlants\";\nimport StatusBar from \"../../components/StatusBar/StatusBar\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet clearTimeoutVariable;\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plantInfo: []\n    };\n\n    this.buttonClicks = (time, id, status) => {\n      const time_subtraction = Date.now() - time; // do an enumerate for the status options\n\n      if (time_subtraction < 30000 && status === \"Just Watered\") {\n        return null;\n      } else if (status === \"Must Water\" || status === \"Water\") {\n        this.setState({\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Watering\"\n          } : el)\n        });\n\n        const tenSecondInterval = () => {\n          this.setState({\n            plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n              id: el.id,\n              plantName: el.plantName,\n              timestamp: Date.now(),\n              plantStatus: \"Just Watered\"\n            } : el)\n          });\n\n          const toSetState = () => {\n            this.setState({\n              plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Water\"\n              } : el)\n            });\n          };\n\n          setTimeout(toSetState, 30000);\n        };\n\n        clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n      } else if (time_subtraction < 10000 && status === \"Watering\") {\n        clearTimeout(clearTimeoutVariable);\n        this.setState({\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Just Watered\"\n          } : el)\n        });\n\n        const toSetState = () => {\n          this.setState({\n            plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n              id: el.id,\n              plantName: el.plantName,\n              timestamp: Date.now(),\n              plantStatus: \"Water\"\n            } : el)\n          });\n        };\n\n        setTimeout(toSetState, 30000);\n      } else {\n        this.setState({\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Watering\"\n          } : el)\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      plantInfo: [{\n        timestamp: 1618274087486,\n        plantName: \"Name1\",\n        id: 1,\n        plantStatus: \"Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name2\",\n        id: 2,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618252487486,\n        plantName: \"Name3\",\n        id: 3,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name4\",\n        id: 4,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name5\",\n        id: 5,\n        plantStatus: \"Must Water\"\n      }]\n    }); // axios\n    //   .get(\"http://localhost:19174/api/TodoItems\")\n    //   .then((res) =>\n    //     this.setState({\n    //       plantInfo: res.data,\n    //     })\n    //   )\n    //   .catch((err) => console.error(err));\n  } //////////////////////////////////////\n  // SHOULD ALSO ADD AXIOS.PUT\n  //////////////////////////////////////\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        },\n        children: this.state.plantInfo.map(plant => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListOfPlants, {\n            couler: this.state.couler,\n            buttonLook: this.buttonLook,\n            buttonClicks: this.buttonClicks,\n            plant: plant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, plant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mayabeaini/ShipVistaPlants-MayaBeaini/ShipVistaPlants-MayaBeaini/Client/src/pages/Home/Home.jsx"],"names":["React","Component","ListOfPlants","StatusBar","clearTimeoutVariable","Home","state","plantInfo","buttonClicks","time","id","status","time_subtraction","Date","now","setState","map","el","plantName","timestamp","plantStatus","tenSecondInterval","toSetState","setTimeout","clearTimeout","componentDidMount","render","display","justifyContent","plant","couler","buttonLook"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListOfPlants from \"../../components/ListOfPlants/ListOfPlants\";\nimport StatusBar from \"../../components/StatusBar/StatusBar\";\n// import axios from \"axios\";\n\nlet clearTimeoutVariable;\nexport default class Home extends Component {\n  state = {\n    plantInfo: [],\n  };\n  componentDidMount() {\n    this.setState({\n      plantInfo: [\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name1\",\n          id: 1,\n          plantStatus: \"Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name2\",\n          id: 2,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618252487486,\n          plantName: \"Name3\",\n          id: 3,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name4\",\n          id: 4,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name5\",\n          id: 5,\n          plantStatus: \"Must Water\",\n        },\n      ],\n    });\n    // axios\n    //   .get(\"http://localhost:19174/api/TodoItems\")\n    //   .then((res) =>\n    //     this.setState({\n    //       plantInfo: res.data,\n    //     })\n    //   )\n    //   .catch((err) => console.error(err));\n  }\n  //////////////////////////////////////\n  // SHOULD ALSO ADD AXIOS.PUT\n  //////////////////////////////////////\n  buttonClicks = (time, id, status) => {\n    const time_subtraction = Date.now() - time;\n    // do an enumerate for the status options\n    if (time_subtraction < 30000 && status === \"Just Watered\") {\n      return null;\n    } else if (status === \"Must Water\" || status === \"Water\") {\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Watering\",\n              }\n            : el\n        ),\n      });\n      const tenSecondInterval = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Just Watered\",\n                }\n              : el\n          ),\n        });\n\n        const toSetState = () => {\n          this.setState({\n            plantInfo: this.state.plantInfo.map((el) =>\n              el.id === id\n                ? {\n                    id: el.id,\n                    plantName: el.plantName,\n                    timestamp: Date.now(),\n                    plantStatus: \"Water\",\n                  }\n                : el\n            ),\n          });\n        };\n\n        setTimeout(toSetState, 30000);\n      };\n      clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n    } else if (time_subtraction < 10000 && status === \"Watering\") {\n      clearTimeout(clearTimeoutVariable);\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Just Watered\",\n              }\n            : el\n        ),\n      });\n\n      const toSetState = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Water\",\n                }\n              : el\n          ),\n        });\n      };\n      setTimeout(toSetState, 30000);\n    } else {\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Watering\",\n              }\n            : el\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <StatusBar />\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n          {this.state.plantInfo.map((plant) => (\n            <div key={plant.id}>\n              <ListOfPlants\n                couler={this.state.couler}\n                buttonLook={this.buttonLook}\n                buttonClicks={this.buttonClicks}\n                plant={plant}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}