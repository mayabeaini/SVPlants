{"ast":null,"code":"var _jsxFileName = \"/Users/mayabeaini/ShipVista-MayaBeaini/shipvista-coding/src/pages/Home/Home.jsx\";\nimport React, { Component } from \"react\";\nimport ListOfPlants from \"../../components/ListOfPlants/ListOfPlants\";\nimport StatusBar from \"../../components/StatusBar/StatusBar\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plantInfo: []\n    };\n\n    this.buttonClicks = (time, id, status) => {\n      const time_subtraction = Date.now() - time; // do an enumerate for the status options\n\n      if (time_subtraction < 30000 && status === \"Just Watered\") {\n        // this.setState((prevState) => ({\n        //   plantInfo: prevState.plantInfo.map((el) =>\n        //     el.id === id ? { ...el, timestamp: Date.now() } : el\n        //   ),\n        return null; // }));\n      } else if (status === \"Must Water\" || status === \"Water\") {\n        this.setState( // (prevState) => (\n        {\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Watering\"\n          } : el)\n        }); // );\n\n        const tenSecondInterval = () => {\n          this.setState( // (prevState) => (\n          {\n            plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n              id: el.id,\n              plantName: el.plantName,\n              timestamp: Date.now(),\n              plantStatus: \"Just Watered\"\n            } : el)\n          }); // );\n\n          const toSetState = () => {\n            this.setState( // (prevState) => (\n            {\n              plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Water\"\n              } : el)\n            });\n          };\n\n          setTimeout(toSetState, 30000);\n        };\n\n        setTimeout(tenSecondInterval, 10000);\n      } else if (time_subtraction < 10000 && status === \"Watering\") {\n        // BUG: OTHER TIMEOUT STILL RUNNING\n        this.setState( // (prevState) => ({\n        {\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Just Watered\"\n          } : el)\n        } // })\n        ); /////////////////////////////////////////////////////////////////////////////\n        // SET INTERVAL SEQUENCE\n\n        const toSetState = () => {\n          this.setState( // (prevState) => ({\n          {\n            plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n              id: el.id,\n              plantName: el.plantName,\n              timestamp: Date.now(),\n              plantStatus: \"Water\"\n            } : el)\n          } // })\n          );\n        };\n\n        setTimeout(toSetState, 30000); //////////////////////////////////////////////////////////////////////////////////\n      } else {\n        this.setState( // (prevState) => (\n        {\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Watering\"\n          } : el)\n        }); // );\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      plantInfo: [{\n        timestamp: 1618274087486,\n        plantName: \"Name1\",\n        id: 1,\n        plantStatus: \"Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name2\",\n        id: 2,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618252487486,\n        plantName: \"Name3\",\n        id: 3,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name4\",\n        id: 4,\n        plantStatus: \"Must Water\"\n      }, {\n        timestamp: 1618274087486,\n        plantName: \"Name5\",\n        id: 5,\n        plantStatus: \"Must Water\"\n      }]\n    }); // axios\n    //   .get(\"https://localhost:5001/api/SVPlants\")\n    //   .then((res) =>\n    //     this.setState({\n    //       plantInfo: res.data,\n    //     })\n    //   )\n    //   .catch((err) => console.error(err));\n  }\n\n  // buttonLook = (time, id) => {\n  //   const time_subtraction = Date.now() - time;\n  //   if (time === 1618274087486) {\n  //     return (\n  //       <button\n  //         // disabled\n  //         style={{\n  //           backgroundColor: \"pink\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"20px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Start Watering\n  //       </button>\n  //     );\n  //   } else if (time_subtraction > 21600000) {\n  //     return (\n  //       <button\n  //         style={{\n  //           backgroundColor: \"red\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"13.5px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Start Watering\n  //       </button>\n  //     );\n  //   } else {\n  //     return (\n  //       <button\n  //         style={{\n  //           backgroundColor: \"black\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"20px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Water\n  //       </button>\n  //     );\n  //   }\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        },\n        children: this.state.plantInfo.map(plant => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListOfPlants, {\n            couler: this.state.couler,\n            buttonLook: this.buttonLook,\n            buttonClicks: this.buttonClicks,\n            plant: plant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, plant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mayabeaini/ShipVista-MayaBeaini/shipvista-coding/src/pages/Home/Home.jsx"],"names":["React","Component","ListOfPlants","StatusBar","Home","state","plantInfo","buttonClicks","time","id","status","time_subtraction","Date","now","setState","map","el","plantName","timestamp","plantStatus","tenSecondInterval","toSetState","setTimeout","componentDidMount","render","display","justifyContent","plant","couler","buttonLook"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ListOfPlants from \"../../components/ListOfPlants/ListOfPlants\";\nimport StatusBar from \"../../components/StatusBar/StatusBar\";\n// import axios from \"axios\";\n\nexport default class Home extends Component {\n  state = {\n    plantInfo: [],\n  };\n  componentDidMount() {\n    this.setState({\n      plantInfo: [\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name1\",\n          id: 1,\n          plantStatus: \"Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name2\",\n          id: 2,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618252487486,\n          plantName: \"Name3\",\n          id: 3,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name4\",\n          id: 4,\n          plantStatus: \"Must Water\",\n        },\n        {\n          timestamp: 1618274087486,\n          plantName: \"Name5\",\n          id: 5,\n          plantStatus: \"Must Water\",\n        },\n      ],\n    });\n    // axios\n    //   .get(\"https://localhost:5001/api/SVPlants\")\n    //   .then((res) =>\n    //     this.setState({\n    //       plantInfo: res.data,\n    //     })\n    //   )\n    //   .catch((err) => console.error(err));\n  }\n  buttonClicks = (time, id, status) => {\n    const time_subtraction = Date.now() - time;\n    // do an enumerate for the status options\n    if (time_subtraction < 30000 && status === \"Just Watered\") {\n      // this.setState((prevState) => ({\n      //   plantInfo: prevState.plantInfo.map((el) =>\n      //     el.id === id ? { ...el, timestamp: Date.now() } : el\n      //   ),\n      return null;\n      // }));\n    } else if (status === \"Must Water\" || status === \"Water\") {\n      this.setState(\n        // (prevState) => (\n        {\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Watering\",\n                }\n              : el\n          ),\n        }\n      );\n      // );\n      const tenSecondInterval = () => {\n        this.setState(\n          // (prevState) => (\n          {\n            plantInfo: this.state.plantInfo.map((el) =>\n              el.id === id\n                ? {\n                    id: el.id,\n                    plantName: el.plantName,\n                    timestamp: Date.now(),\n                    plantStatus: \"Just Watered\",\n                  }\n                : el\n            ),\n          }\n        );\n        // );\n\n        const toSetState = () => {\n          this.setState(\n            // (prevState) => (\n            {\n              plantInfo: this.state.plantInfo.map((el) =>\n                el.id === id\n                  ? {\n                      id: el.id,\n                      plantName: el.plantName,\n                      timestamp: Date.now(),\n                      plantStatus: \"Water\",\n                    }\n                  : el\n              ),\n            }\n          );\n        };\n\n        setTimeout(toSetState, 30000);\n      };\n      setTimeout(tenSecondInterval, 10000);\n    } else if (time_subtraction < 10000 && status === \"Watering\") {\n      // BUG: OTHER TIMEOUT STILL RUNNING\n      this.setState(\n        // (prevState) => ({\n        {\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Just Watered\",\n                }\n              : el\n          ),\n        }\n        // })\n      );\n\n      /////////////////////////////////////////////////////////////////////////////\n      // SET INTERVAL SEQUENCE\n\n      const toSetState = () => {\n        this.setState(\n          // (prevState) => ({\n          {\n            plantInfo: this.state.plantInfo.map((el) =>\n              el.id === id\n                ? {\n                    id: el.id,\n                    plantName: el.plantName,\n                    timestamp: Date.now(),\n                    plantStatus: \"Water\",\n                  }\n                : el\n            ),\n          }\n          // })\n        );\n      };\n      setTimeout(toSetState, 30000);\n      //////////////////////////////////////////////////////////////////////////////////\n    } else {\n      this.setState(\n        // (prevState) => (\n        {\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Watering\",\n                }\n              : el\n          ),\n        }\n      );\n      // );\n    }\n  };\n  // buttonLook = (time, id) => {\n  //   const time_subtraction = Date.now() - time;\n  //   if (time === 1618274087486) {\n  //     return (\n  //       <button\n  //         // disabled\n  //         style={{\n  //           backgroundColor: \"pink\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"20px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Start Watering\n  //       </button>\n  //     );\n  //   } else if (time_subtraction > 21600000) {\n  //     return (\n  //       <button\n  //         style={{\n  //           backgroundColor: \"red\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"13.5px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Start Watering\n  //       </button>\n  //     );\n  //   } else {\n  //     return (\n  //       <button\n  //         style={{\n  //           backgroundColor: \"black\",\n  //           borderRadius: 5,\n  //           border: \"none\",\n  //           outline: \"none\",\n  //           fontWeight: \"bold\",\n  //           color: \"white\",\n  //           width: \"100%\",\n  //           fontSize: \"20px\",\n  //           height: \"30px\",\n  //         }}\n  //         onClick={() => this.buttonClicks(time, id)}\n  //       >\n  //         Water\n  //       </button>\n  //     );\n  //   }\n  // };\n\n  render() {\n    return (\n      <div>\n        <StatusBar />\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n          {this.state.plantInfo.map((plant) => (\n            <div key={plant.id}>\n              <ListOfPlants\n                couler={this.state.couler}\n                buttonLook={this.buttonLook}\n                buttonClicks={this.buttonClicks}\n                plant={plant}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}