{"ast":null,"code":"import { createSlice // createAsyncThunk,\n// createEntityAdapter,\n} from \"@reduxjs/toolkit\";\nconst initialState = [{\n  timestamp: 1618274087486,\n  plantName: \"Name1\",\n  id: 1,\n  plantStatus: \"Water\"\n}, {\n  timestamp: 1618274087486,\n  plantName: \"Name2\",\n  id: 2,\n  plantStatus: \"Must Water\"\n}, {\n  timestamp: 1618252487486,\n  plantName: \"Name3\",\n  id: 3,\n  plantStatus: \"Must Water\"\n}, {\n  timestamp: 1618274087486,\n  plantName: \"Name4\",\n  id: 4,\n  plantStatus: \"Must Water\"\n}, {\n  timestamp: 1618274087486,\n  plantName: \"Name5\",\n  id: 5,\n  plantStatus: \"Must Water\"\n}];\nconst plantsSlice = createSlice({// name: 'plants',\n  // initialState,\n  // reducers: {\n  //   plantUpdated (state, action){\n  //     const {id, plantName, plantStatus, timestamp} = action.payload\n  //     const existingPlant = state.find (plant => plant.id === id)\n  //     if(existingPlant){\n  //       existingPlant.plantName = plantName\n  //       existingPlant.plantStatus = plantStatus\n  //       existingPlant.timestamp = timestamp\n  //     }\n  //   }\n  // }\n});\nexport const {\n  plantUpdated\n} = plantsSlice.actions;\nexport default plantsSlice.reducer;\nexport const selectAllPlants = state => state.posts;\nexport const selectPostById = (state, postId) => state.posts.find(post => post.id === postId);","map":{"version":3,"sources":["/Users/mayabeaini/ShipVistaPlants-MayaBeaini/ShipVistaPlants-MayaBeaini/Client/src/features/plants/plantsSlice.js"],"names":["createSlice","initialState","timestamp","plantName","id","plantStatus","plantsSlice","plantUpdated","actions","reducer","selectAllPlants","state","posts","selectPostById","postId","find","post"],"mappings":"AAAA,SACIA,WADJ,CAEI;AACA;AAHJ,OAIS,kBAJT;AAME,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,SAAS,EAAE,aADb;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,EAAE,EAAE,CAHN;AAIEC,EAAAA,WAAW,EAAE;AAJf,CADmB,EAOnB;AACEH,EAAAA,SAAS,EAAE,aADb;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,EAAE,EAAE,CAHN;AAIEC,EAAAA,WAAW,EAAE;AAJf,CAPmB,EAanB;AACEH,EAAAA,SAAS,EAAE,aADb;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,EAAE,EAAE,CAHN;AAIEC,EAAAA,WAAW,EAAE;AAJf,CAbmB,EAmBnB;AACEH,EAAAA,SAAS,EAAE,aADb;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,EAAE,EAAE,CAHN;AAIEC,EAAAA,WAAW,EAAE;AAJf,CAnBmB,EAyBnB;AACEH,EAAAA,SAAS,EAAE,aADb;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,EAAE,EAAE,CAHN;AAIEC,EAAAA,WAAW,EAAE;AAJf,CAzBmB,CAArB;AAgCA,MAAMC,WAAW,GAAGN,WAAW,CAAC,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAb8B,CAAD,CAA/B;AAgBA,OAAO,MAAM;AAACO,EAAAA;AAAD,IAAiBD,WAAW,CAACE,OAAnC;AACP,eAAeF,WAAW,CAACG,OAA3B;AACA,OAAO,MAAMC,eAAe,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAvC;AAET,OAAO,MAAMC,cAAc,GAAG,CAACF,KAAD,EAAQG,MAAR,KAC5BH,KAAK,CAACC,KAAN,CAAYG,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYU,MAArC,CADK","sourcesContent":["import {\n    createSlice,\n    // createAsyncThunk,\n    // createEntityAdapter,\n  } from \"@reduxjs/toolkit\";\n  \n  const initialState = [\n    {\n      timestamp: 1618274087486,\n      plantName: \"Name1\",\n      id: 1,\n      plantStatus: \"Water\",\n    },\n    {\n      timestamp: 1618274087486,\n      plantName: \"Name2\",\n      id: 2,\n      plantStatus: \"Must Water\",\n    },\n    {\n      timestamp: 1618252487486,\n      plantName: \"Name3\",\n      id: 3,\n      plantStatus: \"Must Water\",\n    },\n    {\n      timestamp: 1618274087486,\n      plantName: \"Name4\",\n      id: 4,\n      plantStatus: \"Must Water\",\n    },\n    {\n      timestamp: 1618274087486,\n      plantName: \"Name5\",\n      id: 5,\n      plantStatus: \"Must Water\",\n    },\n  ];\n  const plantsSlice = createSlice({\n    // name: 'plants',\n    // initialState,\n    // reducers: {\n    //   plantUpdated (state, action){\n    //     const {id, plantName, plantStatus, timestamp} = action.payload\n    //     const existingPlant = state.find (plant => plant.id === id)\n    //     if(existingPlant){\n    //       existingPlant.plantName = plantName\n    //       existingPlant.plantStatus = plantStatus\n    //       existingPlant.timestamp = timestamp\n    //     }\n    //   }\n    // }\n  })\n  \n  export const {plantUpdated} = plantsSlice.actions\n  export default plantsSlice.reducer\n  export const selectAllPlants = state => state.posts\n\nexport const selectPostById = (state, postId) =>\n  state.posts.find(post => post.id === postId)"]},"metadata":{},"sourceType":"module"}