{"ast":null,"code":"import { createSlice // createAsyncThunk,\n// createEntityAdapter,\n} from '@reduxjs/toolkit';\nconst initialState = [{\n  id: 1,\n  plantName: 'Bacopa',\n  plantStatus: 'Water',\n  timestamp: 1618427341396\n}, {\n  id: 2,\n  plantName: 'Daylily',\n  plantStatus: 'Must Water',\n  timestamp: 1618427341396\n}, {\n  id: 3,\n  plantName: 'Petunia',\n  plantStatus: 'Water',\n  timestamp: 1618427341396\n}, {\n  id: 4,\n  plantName: 'Peony',\n  plantStatus: 'Water',\n  timestamp: 1618427341396\n}, {\n  id: 5,\n  plantName: 'Sunflower',\n  plantStatus: 'Must Water',\n  timestamp: 1618427341396\n}];\nconst plantsSlice = createSlice({\n  name: 'plants',\n  initialState,\n  reducers: {\n    plantUpdated(state, action) {\n      const {\n        id,\n        plantName,\n        plantStatus,\n        timestamp\n      } = action.payload;\n      const existingPlant = state.find(plant => plant.id === id);\n\n      if (existingPlant) {\n        existingPlant.plantName = plantName;\n        existingPlant.plantStatus = plantStatus;\n        existingPlant.timestamp = timestamp;\n      }\n    }\n\n  }\n});\nexport const {\n  plantUpdated\n} = plantsSlice.actions;\nexport default plantsSlice.reducer;","map":{"version":3,"sources":["/Users/mayabeaini/ShipVistaPlants-MayaBeaini/ShipVistaPlants-MayaBeaini/Client/src/features/plants/plantsSlice.js"],"names":["createSlice","initialState","id","plantName","plantStatus","timestamp","plantsSlice","name","reducers","plantUpdated","state","action","payload","existingPlant","find","plant","actions","reducer"],"mappings":"AAAA,SACEA,WADF,CAEE;AACA;AAHF,OAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,QAFb;AAGEC,EAAAA,WAAW,EAAE,OAHf;AAIEC,EAAAA,SAAS,EAAE;AAJb,CADmB,EAOnB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,WAAW,EAAE,YAHf;AAIEC,EAAAA,SAAS,EAAE;AAJb,CAPmB,EAanB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,WAAW,EAAE,OAHf;AAIEC,EAAAA,SAAS,EAAE;AAJb,CAbmB,EAmBnB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,WAAW,EAAE,OAHf;AAIEC,EAAAA,SAAS,EAAE;AAJb,CAnBmB,EAyBnB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,WAAW,EAAE,YAHf;AAIEC,EAAAA,SAAS,EAAE;AAJb,CAzBmB,CAArB;AAgCA,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAC9BO,EAAAA,IAAI,EAAE,QADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAET,QAAAA,EAAF;AAAMC,QAAAA,SAAN;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA;AAA9B,UAA4CM,MAAM,CAACC,OAAzD;AACA,YAAMC,aAAa,GAAGH,KAAK,CAACI,IAAN,CAAYC,KAAD,IAAWA,KAAK,CAACb,EAAN,KAAaA,EAAnC,CAAtB;;AACA,UAAIW,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACV,SAAd,GAA0BA,SAA1B;AACAU,QAAAA,aAAa,CAACT,WAAd,GAA4BA,WAA5B;AACAS,QAAAA,aAAa,CAACR,SAAd,GAA0BA,SAA1B;AACD;AACF;;AATO;AAHoB,CAAD,CAA/B;AAgBA,OAAO,MAAM;AAAEI,EAAAA;AAAF,IAAmBH,WAAW,CAACU,OAArC;AACP,eAAeV,WAAW,CAACW,OAA3B","sourcesContent":["import {\n  createSlice,\n  // createAsyncThunk,\n  // createEntityAdapter,\n} from '@reduxjs/toolkit'\n\nconst initialState = [\n  {\n    id: 1,\n    plantName: 'Bacopa',\n    plantStatus: 'Water',\n    timestamp: 1618427341396,\n  },\n  {\n    id: 2,\n    plantName: 'Daylily',\n    plantStatus: 'Must Water',\n    timestamp: 1618427341396,\n  },\n  {\n    id: 3,\n    plantName: 'Petunia',\n    plantStatus: 'Water',\n    timestamp: 1618427341396,\n  },\n  {\n    id: 4,\n    plantName: 'Peony',\n    plantStatus: 'Water',\n    timestamp: 1618427341396,\n  },\n  {\n    id: 5,\n    plantName: 'Sunflower',\n    plantStatus: 'Must Water',\n    timestamp: 1618427341396,\n  },\n]\nconst plantsSlice = createSlice({\n  name: 'plants',\n  initialState,\n  reducers: {\n    plantUpdated(state, action) {\n      const { id, plantName, plantStatus, timestamp } = action.payload\n      const existingPlant = state.find((plant) => plant.id === id)\n      if (existingPlant) {\n        existingPlant.plantName = plantName\n        existingPlant.plantStatus = plantStatus\n        existingPlant.timestamp = timestamp\n      }\n    },\n  },\n})\n\nexport const { plantUpdated } = plantsSlice.actions\nexport default plantsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}