{"ast":null,"code":"var _jsxFileName = \"/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/PlantsList.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport planty from \"../../media/plant.png\";\nexport const PlantsList = () => {\n  const plants = useSelector(state => state.plants);\n\n  const buttonClicks = (time, id, status) => {\n    const aPlant = {\n      plantName: \"Plant 1\",\n      plantStatus: \"MustWater\",\n      timestamp: 1234567890\n    }; // axios\n    //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n    //   .then((response) => console.log(response));\n\n    const time_subtraction = Date.now() - time; // do an enumerate for the status options\n\n    if (time_subtraction < 30000 && status === \"Just Watered\") {\n      return null;\n    } else if (status === \"Must Water\" || status === \"Water\") {\n      this.setState({\n        plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n          id: el.id,\n          plantName: el.plantName,\n          timestamp: Date.now(),\n          plantStatus: \"Watering\"\n        } : el)\n      });\n\n      const tenSecondInterval = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Just Watered\"\n          } : el)\n        });\n\n        const toSetState = () => {\n          this.setState({\n            plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n              id: el.id,\n              plantName: el.plantName,\n              timestamp: Date.now(),\n              plantStatus: \"Water\"\n            } : el)\n          });\n        };\n\n        setTimeout(toSetState, 30000);\n      };\n\n      clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n    } else if (time_subtraction < 10000 && status === \"Watering\") {\n      clearTimeout(clearTimeoutVariable);\n      this.setState({\n        plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n          id: el.id,\n          plantName: el.plantName,\n          timestamp: Date.now(),\n          plantStatus: \"Just Watered\"\n        } : el)\n      });\n\n      const toSetState = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n            id: el.id,\n            plantName: el.plantName,\n            timestamp: Date.now(),\n            plantStatus: \"Water\"\n          } : el)\n        });\n      };\n\n      setTimeout(toSetState, 30000);\n    } else {\n      this.setState({\n        plantInfo: this.state.plantInfo.map(el => el.id === id ? {\n          id: el.id,\n          plantName: el.plantName,\n          timestamp: Date.now(),\n          plantStatus: \"Watering\"\n        } : el)\n      });\n    }\n  };\n\n  const renderedPlants = plants.map(plant => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: planty,\n    alt: \"a plant\",\n    style: {\n      width: \"100px\",\n      backgroundColor: \"#faf0e6\",\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, plant.plantName), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      // backgroundColor: buttonStyle(plant.plantStatus),\n      borderRadius: 5,\n      border: \"none\",\n      outline: \"none\",\n      fontWeight: \"bold\",\n      color: \"white\",\n      width: \"100%\",\n      fontSize: \"20px\",\n      height: \"30px\"\n    } //   onClick={() =>\n    //     buttonClicks(plant.timestamp, plant.id, plant.plantStatus)\n    //   }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, plant.plantStatus)));\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Plants\"), renderedPlants);\n};","map":{"version":3,"sources":["/Users/mayabeaini/Projects/redux-essentials-example-app-master/src/features/plants/PlantsList.js"],"names":["React","useSelector","planty","PlantsList","plants","state","buttonClicks","time","id","status","aPlant","plantName","plantStatus","timestamp","time_subtraction","Date","now","setState","plantInfo","map","el","tenSecondInterval","toSetState","setTimeout","clearTimeoutVariable","clearTimeout","renderedPlants","plant","display","flexDirection","alignItems","width","backgroundColor","borderRadius","border","outline","fontWeight","color","fontSize","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport planty from \"../../media/plant.png\";\n\nexport const PlantsList = () => {\n  const plants = useSelector(state => state.plants)\n\n    const buttonClicks = (time, id, status) => {\n    const aPlant = {\n      plantName: \"Plant 1\",\n      plantStatus: \"MustWater\",\n      timestamp: 1234567890,\n    };\n    // axios\n    //   .put(\"http://localhost:2238/api/SVPlantItems/1\", aPlant)\n    //   .then((response) => console.log(response));\n\n    const time_subtraction = Date.now() - time;\n    // do an enumerate for the status options\n    if (time_subtraction < 30000 && status === \"Just Watered\") {\n      return null;\n    } else if (status === \"Must Water\" || status === \"Water\") {\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Watering\",\n              }\n            : el\n        ),\n      });\n      const tenSecondInterval = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Just Watered\",\n                }\n              : el\n          ),\n        });\n\n        const toSetState = () => {\n          this.setState({\n            plantInfo: this.state.plantInfo.map((el) =>\n              el.id === id\n                ? {\n                    id: el.id,\n                    plantName: el.plantName,\n                    timestamp: Date.now(),\n                    plantStatus: \"Water\",\n                  }\n                : el\n            ),\n          });\n        };\n\n        setTimeout(toSetState, 30000);\n      };\n      clearTimeoutVariable = setTimeout(tenSecondInterval, 10000);\n    } else if (time_subtraction < 10000 && status === \"Watering\") {\n      clearTimeout(clearTimeoutVariable);\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Just Watered\",\n              }\n            : el\n        ),\n      });\n\n      const toSetState = () => {\n        this.setState({\n          plantInfo: this.state.plantInfo.map((el) =>\n            el.id === id\n              ? {\n                  id: el.id,\n                  plantName: el.plantName,\n                  timestamp: Date.now(),\n                  plantStatus: \"Water\",\n                }\n              : el\n          ),\n        });\n      };\n      setTimeout(toSetState, 30000);\n    } else {\n      this.setState({\n        plantInfo: this.state.plantInfo.map((el) =>\n          el.id === id\n            ? {\n                id: el.id,\n                plantName: el.plantName,\n                timestamp: Date.now(),\n                plantStatus: \"Watering\",\n              }\n            : el\n        ),\n      });\n    }\n  };\n\n\n  const renderedPlants = plants.map(plant => (\n    <div\n    style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n  >\n    <img\n      src={planty}\n      alt=\"a plant\"\n      style={{\n        width: \"100px\",\n        backgroundColor: \"#faf0e6\",\n        borderRadius: 10,\n      }}\n    />\n    <h3>{plant.plantName}</h3>\n    <button\n      style={{\n        // backgroundColor: buttonStyle(plant.plantStatus),\n        borderRadius: 5,\n        border: \"none\",\n        outline: \"none\",\n        fontWeight: \"bold\",\n        color: \"white\",\n        width: \"100%\",\n        fontSize: \"20px\",\n        height: \"30px\",\n      }}\n    //   onClick={() =>\n    //     buttonClicks(plant.timestamp, plant.id, plant.plantStatus)\n    //   }\n    >\n      {plant.plantStatus}\n    </button>\n  </div>\n\n  ))\n\n  return (\n    <section>\n      <h2>Plants</h2>\n      {renderedPlants}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}